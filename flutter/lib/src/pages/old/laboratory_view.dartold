import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'laboratory_model.dart';
import 'laboratory_widgets.dart';
import 'package:wolt_modal_sheet/wolt_modal_sheet.dart';

class LaboratoryView extends StatelessWidget {
  const LaboratoryView({super.key, required this.numeroPartita});
  
  final String numeroPartita;
  static const routeName = '/laboratory';

  @override
  Widget build(BuildContext context) {
    return ChangeNotifierProvider(
      create: (_) => LaboratoryModel()..loadPartita(numeroPartita),
      child: Scaffold(
        appBar: AppBar(
          title: const Text('\'mboka Lab'),
        ),
        floatingActionButton: Consumer<LaboratoryModel>(
          builder: (context, viewModel, _) {
            return FloatingActionButton.extended(
              onPressed: () {
                WoltModalSheet.show(
                  context: context,
                  pageListBuilder: (bottomSheetContext) => [
                    SliverWoltModalSheetPage(
                      mainContentSliversBuilder: (context) => [
                        SliverList.builder(
                          itemCount: viewModel.quests.length, // Specifica il numero di elementi nella lista
                          itemBuilder: (context, index) {
                            final quest = viewModel.quests[index];
                            return ListTile(
                              title: Text(quest.name), // Visualizza il nome della quest
                              onTap: () {
                                // Esegui azioni al tap, se necessario
                                Navigator.of(bottomSheetContext).pop();
                              },
                            );
                          },
                        ),
                      ],
                    ),
                  ],
                );
              },
              label: const Text('Quest'),
            );
          },
        ),
        body: Stack(
          children: [
            // Immagine di sfondo
            Container(
              width: double.infinity,
              decoration: BoxDecoration(
                color: const Color(0xFF47456D),
                image: const DecorationImage(
                  image: AssetImage('assets/images/background.png'),
                  fit: BoxFit.contain,
                  alignment: Alignment.center,
                ),
              ),
            ),
            // Contenuto della pagina
            Consumer<LaboratoryModel>(
              builder: (context, viewModel, _) {
                return Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    const SizedBox(height: 10),
                    // Prima riga: Categorie
                    SizedBox(
                      height: 100,
                      child: SingleChildScrollView(
                        scrollDirection: Axis.horizontal,
                        child: Row(
                          children: viewModel.categories.map((category) {
                            return GestureDetector(
                              onTap: () {
                                // Azione da eseguire al clic su una categoria
                                viewModel.loadMaterialsByCategory(category.id);
                              },
                              child: Container(
                                width: 80,
                                margin: const EdgeInsets.all(4),
                                decoration: BoxDecoration(
                                  color: Colors.white24,
                                  borderRadius: BorderRadius.circular(8.0),
                                ),
                                child: Column(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  children: [
                                    buildSvgImage(category.image),
                                    const SizedBox(height: 8),
                                    Text(
                                      category.name,
                                      style: const TextStyle(color: Colors.white),
                                      textAlign: TextAlign.center,
                                    ),
                                  ],
                                ),
                              ),
                            );
                          }).toList(),
                        ),
                      ),
                    ),
                    const SizedBox(height: 10),
                    // Seconda riga: Materiali
                    SizedBox(
                      height: 100,
                      child: SingleChildScrollView(
                        scrollDirection: Axis.horizontal,
                        child: Row(
                          children: viewModel.materials.map((material) {
                            return Draggable<int>(
                              data: material.id,  // ID materiale per drag and drop
                              feedback: MaterialFeedbackWidget(material: material),
                              childWhenDragging: Opacity(
                                opacity: 0.5,
                                child: MaterialWidget(material: material),
                              ),
                              child: MaterialWidget(material: material),
                            );
                          }).toList(),
                        ),
                      ),
                    ),
                    // Messaggio di benvenuto e altre informazioni
                    Center(
                      child: Padding(
                        padding: const EdgeInsets.symmetric(horizontal: 16.0),
                        child: Consumer<LaboratoryModel>(
                          builder: (context, viewModel, _) {
                            return Column(
                              crossAxisAlignment: CrossAxisAlignment.start, // Allinea in alto
                              mainAxisSize: MainAxisSize.min, // Limita la dimensione verticale
                              children: [
                                Row(
                                  children: [
                                    // Visualizza ogni materiale in `materialsToCombine`
                                    ...viewModel.materialsToCombine.map((material) {
                                      return GestureDetector(
                                        onTap: () {
                                          viewModel.removeFromCombination(material);
                                        },
                                        child: MaterialWidget(material: material),
                                      );
                                    }),
                                    // Bottone freccia alla fine
                                    IconButton(
                                      icon: const Icon(
                                        Icons.arrow_forward,
                                        color: Colors.white,
                                      ),
                                      onPressed: () {
                                        // TODO: viewModel.checkCombination();
                                      },
                                    ),
                                  ],
                                ),
                              ],
                            );
                          },
                        ),
                      ),
                    ),
                  ],
                );
              },
            ),
            
            // Rettangolo semi-trasparente in basso a sinistra
            Positioned(
              bottom: 16.0,
              left: 16.0,
              child: Consumer<LaboratoryModel>(
                builder: (context, viewModel, _) {
                  return Container(
                    padding: const EdgeInsets.all(12.0),
                    decoration: BoxDecoration(
                      color: const Color.fromARGB(90, 0, 0, 0),
                      borderRadius: BorderRadius.circular(8.0),
                    ),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text(
                          'Livello: ${viewModel.partitaMap["level"] ?? "N/A"}',
                          style: const TextStyle(color: Colors.white, fontSize: 20),
                        ),
                        Text(
                          'Esperienza: ${viewModel.partitaMap["experience"] ?? "N/A"}',
                          style: const TextStyle(color: Colors.white, fontSize: 20),
                        ),
                        Text(
                          'Credito: ${viewModel.partitaMap["credit"] ?? "N/A"}',
                          style: const TextStyle(color: Colors.white, fontSize: 20),
                        ),
                      ],
                    ),
                  );
                },
              ),
            ),
            // Cerchio centrale che reagisce al drop dei materiali
            Center(
              child: Consumer<LaboratoryModel>(
                builder: (context, viewModel, _) {
                  return DragTarget<int>(
                    onAcceptWithDetails: (materialId) {
                      viewModel.onMaterialDropped(materialId.data);
                    },
                    builder: (context, candidateData, rejectedData) {
                      return Container(
                        width: 120,
                        height: 120,
                        decoration: BoxDecoration(
                          shape: BoxShape.circle,
                          color: Color.fromARGB(90, 27, 13, 153),
                          border: Border.all(color: Colors.white, width: 3),
                        ),
                        child: Center(
                          child: Text(
                            'Rilascia',
                            style: const TextStyle(color: Colors.white, fontSize: 18),
                            textAlign: TextAlign.center,
                          ),
                        ),
                      );
                    },
                  );
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
}